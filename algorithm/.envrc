function new() {
  if [ -z "$*" ]; then
    echo "file name is required"
    exit -1
  fi

  local origin="$*"
  local name=${origin//[[:space:]]/}
  local fileName="${name}.java"

  cat << EOF > "${fileName}"
import java.util.Objects;

/*
 * Descryption
 *
 * https://leetcode.com/problems/xxx
 *
 *
 *
 * Review
 *
 *
 */
class ${name} {
  public static void main(String[] args) {
    Object[][] parameters = new Object[][] {
      {
        new char[][] {
          { '1', '1', '1', '1', '0' },
          { '1', '1', '0', '1', '0' },
          { '1', '1', '0', '0', '0' },
          { '0', '0', '0', '0', '0' },
        },
        1
      },
    };

    var solution = new ${name}();
    for (Object[] parameter : parameters) {
      var grid = (char[][]) parameter[0];
      var expected = (int) parameter[1];

      {
        if (!Objects.equals(expected, actual)) {
          throw new IllegalStateException("Expected: " + Objects.toString(expected) +
              ", but was: " + Objects.toString(actual));
        }
      }
    }
  }
}
EOF

  echo "${fileName} is generated"
}

export_function new
