{"ast":null,"code":"var _jsxFileName = \"/Users/acktsap/workspace/git/wiki/instance/framework/react/tutorial/src/board.js\";\nimport React from 'react';\nimport './index.css';\nimport Square from './square'; // To collect data from multiple children, or to have two child components communicate with each other, you need to declare the shared state in their parent component instead\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null)\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = 'X'; // trigger re-rendering\n\n    this.setState({\n      squares: squares\n    });\n  }\n\n  renderSquare(i) {\n    // pass props\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    const status = 'Next player: X';\n    /*\n      following code will be converted to\n       return React.createElement('div', {className: 'status'},\n        React.createElement('div', ...),\n        ...\n      );\n    */\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        classNamae: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/acktsap/workspace/git/wiki/instance/framework/react/tutorial/src/board.js"],"names":["React","Square","Board","Component","constructor","props","state","squares","Array","fill","handleClick","i","slice","setState","renderSquare","render","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;AAEA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADE,KAAb;AAGD;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,UAAMJ,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBK,KAAnB,EAAhB;AACAL,IAAAA,OAAO,CAACI,CAAD,CAAP,GAAa,GAAb,CAFa,CAIb;;AACA,SAAKE,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAEA;AAAX,KAAd;AACD;;AAEDO,EAAAA,YAAY,CAACH,CAAD,EAAI;AACd;AACA,wBAAO,QAAC,MAAD;AACL,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBI,CAAnB;AADF;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,gBAAf;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI,wBACE;AAAA,8BACE;AAAK,QAAA,UAAU,EAAC,QAAhB;AAAA,kBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACG,KAAKF,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAtDgD","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Square from './square'\n\n// To collect data from multiple children, or to have two child components communicate with each other, you need to declare the shared state in their parent component instead\n\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      squares: Array(9).fill(null)\n    }\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = 'X'\n\n    // trigger re-rendering\n    this.setState({ squares: squares }) \n  }\n\n  renderSquare(i) {\n    // pass props\n    return <Square\n      value={this.state.squares[i]}\n    />;\n  }\n\n  render() {\n    const status = 'Next player: X';\n\n    /*\n      following code will be converted to\n\n      return React.createElement('div', {className: 'status'},\n        React.createElement('div', ...),\n        ...\n      );\n    */\n    return (\n      <div>\n        <div classNamae='status'>{status}</div>\n        <div className='board-row'>\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}